{"version":3,"file":"static/js/376.cce94bc1.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","redux/API.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","redux/filterSlice.js","components/ContactList/ContactList .jsx","components/Filter/Filter.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const AddContactForm = styled.form`\n  background-color: #b1cede;\n  max-width: 450px;\n  border-radius: 10px;\n  text-align: center;\n  padding: 25px;\n`;\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n\nexport const API = createApi({\n  reducerPath: 'contacts',\n  baseQuery: fetchBaseQuery({\n    baseUrl: 'https://63b283da5e490925c51a9189.mockapi.io',\n  }),\n  endpoints: builder => ({\n    getContacts: builder.query({\n      query: () => '/contacts',\n      providesTags: ['Contacts'],\n    }),\n    addContact: builder.mutation({\n      query: contact => ({\n        url: '/contacts',\n        method: 'POST',\n        body: contact,\n      }),\n      invalidatesTags: ['Contacts'],\n    }),\n    deleteContact: builder.mutation({\n      query: id => ({\n        url: `contacts/${id}`,\n        method: 'DELETE',\n      }),\n      invalidatesTags: ['Contacts'],\n    }),\n  }),\n});\n\nexport const {\n  useGetContactsQuery,\n  useAddContactMutation,\n  useDeleteContactMutation,\n} = API;\n","import { useState } from 'react';\nimport { AddContactForm } from './ContactForm.styled';\nimport { nanoid } from 'nanoid';\nimport { useAddContactMutation, useGetContactsQuery } from 'redux/API';\n// import { addContact, getContacts } from 'redux/contactsSlice';\n\nexport const ContactForm = () => {\n  const [contactName, setContactName] = useState('');\n  const [contactNumber, setContactNumber] = useState('');\n  const { data } = useGetContactsQuery();\n  const [addContact] = useAddContactMutation();\n\n  const newContact = async (name, number) => {\n    const includeName = name => {\n      return data.find(\n        e => e.name.toLocaleLowerCase() === name.toLocaleLowerCase()\n      );\n    };\n    const includeNumber = () => {\n      return data.find(e => e.number === number);\n    };\n    const contact = {\n      id: nanoid(10),\n      name,\n      number,\n    };\n    if (includeName(contact.name)) {\n      return alert(`${contact.name} is already in contacts`);\n    }\n    if (includeNumber(contact.number)) {\n      return alert(`${contact.number} is already in contacts`);\n    }\n    try {\n      await addContact(contact);\n    } catch {\n      window.alert('Oh no, error...');\n    }\n  };\n\n  const handleChange = e => {\n    const event = e.target;\n    if (event.type === 'text') {\n      setContactName(event.value);\n    }\n    if (event.type === 'tel') {\n      setContactNumber(event.value);\n    }\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    newContact(contactName, contactNumber);\n    setContactName('');\n    setContactNumber('');\n  };\n\n  return (\n    <AddContactForm onSubmit={onSubmit} autoComplete=\"off\">\n      <label>\n        <p>Name</p>\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          required\n          value={contactName}\n          onChange={handleChange}\n        />\n      </label>\n      <label>\n        <p>Number</p>\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          required\n          value={contactNumber}\n          onChange={handleChange}\n        />\n      </label>\n      <br />\n      <button type=\"submit\">Add contact</button>\n    </AddContactForm>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-direction: column;\n  width: 500px;\n  background-color: #ffd1e0;\n  border-radius: 10px;\n  padding: 25px;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  margin: 10px;\n  width: 100%;\n  text-align: start;\n`;\n\nexport const DeleteBtn = styled.button``;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst filterSlice = createSlice({\n  name: 'filter',\n  initialState: { filter: '' },\n  reducers: {\n    setFilter(state, action) {\n      state.filter = action.payload;\n    },\n  },\n});\n\nexport const filterReducer = filterSlice.reducer;\nexport const { setFilter } = filterSlice.actions;\nexport const getFilter = state => state.filter.filter;\n","import { Item, List, DeleteBtn } from './ContactList.styled';\nimport { useSelector } from 'react-redux';\nimport { getFilter } from 'redux/filterSlice';\nimport { useGetContactsQuery, useDeleteContactMutation } from 'redux/API';\n\nexport const ContactList = () => {\n  const [deleteContact] = useDeleteContactMutation();\n  const { data } = useGetContactsQuery();\n  const filter = useSelector(getFilter);\n\n  const onFilterChange = () => {\n    return data.filter(c =>\n      c.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  const removeContact = e => {\n    deleteContact(e.currentTarget.id);\n  };\n\n  return (\n    <List>\n      {onFilterChange().map(c => (\n        <Item key={c.id}>\n          <span>{c.name}</span>\n          <span>{c.number}</span>\n          <DeleteBtn id={c.id} onClick={removeContact}>\n            Delete\n          </DeleteBtn>\n        </Item>\n      ))}\n    </List>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { setFilter, getFilter } from 'redux/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n\n  const onFilterChange = e => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  return (\n    <label>\n      <p>Find contacts by name</p>\n      <input type=\"text\" value={filter} onChange={onFilterChange} />\n    </label>\n  );\n};\n","import { ContactForm } from '../../components/ContactForm/ContactForm';\nimport { ContactList } from '../../components/ContactList/ContactList ';\nimport { Filter } from '../../components/Filter/Filter';\n\nimport { useGetContactsQuery } from 'redux/API';\n\n\nconst Contacts = () => {\n    const { data, error, isLoading } = useGetContactsQuery();\nreturn (\n    <>\n            <h1>Phonebook</h1>\n            <ContactForm />\n            <h2>Contacts</h2>\n\n            {!isLoading && data.length !== 0 ? (\n              <>\n                <Filter />\n                <ContactList />\n              </>\n            ) : (\n              <div>\n                Your contacts are not here yet, but you can add contacts in the\n                form above and save them in this app\n              </div>\n            )}\n            {error && <div>Oh no... Something wrong</div>}\n            </>\n    )\n}\n\nexport default Contacts"],"names":["AddContactForm","styled","API","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getContacts","query","providesTags","addContact","mutation","contact","url","method","body","invalidatesTags","deleteContact","id","useGetContactsQuery","useAddContactMutation","useDeleteContactMutation","ContactForm","useState","contactName","setContactName","contactNumber","setContactNumber","data","newContact","name","number","includeName","find","e","toLocaleLowerCase","includeNumber","nanoid","alert","window","handleChange","event","target","type","value","onSubmit","preventDefault","autoComplete","pattern","required","onChange","List","Item","DeleteBtn","filterSlice","createSlice","initialState","filter","reducers","setFilter","state","action","payload","reducer","actions","getFilter","ContactList","useSelector","removeContact","currentTarget","c","toLowerCase","includes","map","onClick","Filter","dispatch","useDispatch","error","isLoading","length"],"sourceRoot":""}
{"version":3,"file":"static/js/532.50448549.chunk.js","mappings":"6OAEaA,EAAiBC,EAAAA,GAAAA,KAAH,wLASdC,EAASD,EAAAA,GAAAA,OAAH,6CCXNE,EAAc,SAAAC,GAAK,OAAIA,EAAMC,QAAV,E,6BCMnBC,EAAc,WACzB,OAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA0CF,EAAAA,EAAAA,UAAS,IAAnD,eAAOG,EAAP,KAAsBC,EAAtB,KAEMC,GAAWC,EAAAA,EAAAA,MACTR,GAAaS,EAAAA,EAAAA,IAAYX,GAAzBE,SAiBFU,EAAe,SAAAC,GACnB,IAAMC,EAAQD,EAAEE,OACG,SAAfD,EAAME,MACRV,EAAeQ,EAAMG,OAEJ,QAAfH,EAAME,MACRR,EAAiBM,EAAMG,MAE1B,EASD,OACE,UAACpB,EAAD,CAAgBqB,SARD,SAAAL,GACfA,EAAEM,iBA1Be,SAACC,EAAMC,GACxB,IAAMC,EAAcpB,EAASqB,MAC3B,SAAAV,GAAC,OAAIA,EAAEO,KAAKI,gBAAkBJ,EAAKI,aAAlC,IAEGC,EAAgBvB,EAASqB,MAAK,SAAAV,GAAC,OAAIA,EAAEQ,SAAWA,CAAjB,IAEjCC,EACKI,MAAM,GAAD,OAAIN,EAAJ,4BAEVK,EACKC,MAAM,GAAD,OAAIL,EAAJ,4BAEdZ,GAASkB,EAAAA,EAAAA,IAAW,CAAEP,KAAMA,EAAMC,OAAQA,IAC3C,CAcCO,CAAWvB,EAAaE,GACxBD,EAAe,IACfE,EAAiB,GAClB,EAGqCqB,aAAa,MAAjD,WACE,8BACE,iCACA,kBACEb,KAAK,OACLI,KAAK,OACLU,QAAQ,yHACRC,UAAQ,EACRd,MAAOZ,EACP2B,SAAUpB,QAGd,8BACE,mCACA,kBACEI,KAAK,MACLI,KAAK,SACLU,QAAQ,yFACRC,UAAQ,EACRd,MAAOV,EACPyB,SAAUpB,QAGd,mBACA,SAACb,EAAD,CAAQiB,KAAK,SAAb,2BAGL,ECvEYiB,EAAOnC,EAAAA,GAAAA,GAAH,+NAYJoC,EAAOpC,EAAAA,GAAAA,GAAH,oIAOJqC,EAAOrC,EAAAA,GAAAA,KAAH,mEAIJsC,EAAStC,EAAAA,GAAAA,KAAH,8CAGNuC,EAAYvC,EAAAA,GAAAA,OAAH,8D,UClBTwC,EAAc,WACzB,IAAM7B,GAAWC,EAAAA,EAAAA,MACTR,GAAaS,EAAAA,EAAAA,IAAYX,GAAzBE,UACRqC,EAAAA,EAAAA,YAAU,WACR9B,GAAS+B,EAAAA,EAAAA,MACV,GAAE,CAAC/B,IAEJ,IAAMgC,GAAS9B,EAAAA,EAAAA,IAAY+B,EAAAA,IAQrBC,EAAgB,SAAA9B,GACpBJ,GAASmC,EAAAA,EAAAA,IAAc/B,EAAEgC,cAAcC,IACxC,EAED,OACE,SAACb,EAAD,UAVO/B,EAASuC,QAAO,SAAAM,GAAC,OACtBA,EAAE3B,KAAKI,cAAcwB,SAASP,EAAOjB,cADf,IAWJyB,KAAI,SAAAF,GAAC,OACrB,UAACb,EAAD,YACE,SAACC,EAAD,UAAOY,EAAE3B,QACT,SAAC,EAAD,UAAS2B,EAAE1B,UACX,SAACgB,EAAD,CAAWS,GAAIC,EAAED,GAAII,QAASP,EAA9B,sBAHSI,EAAED,GADQ,KAW5B,ECvCYK,EAAS,WACpB,IAAM1C,GAAWC,EAAAA,EAAAA,MACX+B,GAAS9B,EAAAA,EAAAA,IAAY+B,EAAAA,IAM3B,OACE,8BACE,kDACA,kBAAO1B,KAAK,OAAOC,MAAOwB,EAAQT,SAPf,SAAAnB,GACrBJ,GAAS2C,EAAAA,EAAAA,IAAUvC,EAAEE,OAAOE,OAC7B,MAQF,ECDD,EAZiB,WACf,OACE,iCACE,eAAIoC,MAAO,CAAEC,WAAY,YAAzB,wBACA,SAACnD,EAAD,KACA,eAAIkD,MAAO,CAAEC,WAAY,YAAzB,uBACA,SAACH,EAAD,KACA,SAACb,EAAD,MAGL,C","sources":["components/ContactForm/ContactForm.styled.jsx","redux/contacts/contactsSelectors.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList .jsx","components/Filter/Filter.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const AddContactForm = styled.form`\n  background-color: tomato;\n  max-width: 450px;\n  border-radius: 10px;\n  text-align: center;\n  padding: 25px;\n  margin-left: auto;\n  margin-right: auto;\n`;\nexport const Button = styled.button`\n  margin-top: 15px;\n`;\n","export const getContacts = state => state.contacts;","import { useState } from 'react';\nimport { AddContactForm, Button } from './ContactForm.styled';\nimport { getContacts } from 'redux/contacts/contactsSelectors';\nimport { addContact } from 'redux/contacts/contactsOperations';\nimport { useDispatch, useSelector } from 'react-redux';\n\nexport const ContactForm = () => {\n  const [contactName, setContactName] = useState('');\n  const [contactNumber, setContactNumber] = useState('');\n\n  const dispatch = useDispatch();\n  const { contacts } = useSelector(getContacts);\n\n  const newContact = (name, number) => {\n    const includeName = contacts.find(\n      e => e.name.toLowerCase() === name.toLowerCase()\n    );\n    const includeNumber = contacts.find(e => e.number === number);\n\n    if (includeName) {\n      return alert(`${name} is already in contacts`);\n    }\n    if (includeNumber) {\n      return alert(`${number} is already in contacts`);\n    }\n    dispatch(addContact({ name: name, number: number }));\n  };\n\n  const handleChange = e => {\n    const event = e.target;\n    if (event.type === 'text') {\n      setContactName(event.value);\n    }\n    if (event.type === 'tel') {\n      setContactNumber(event.value);\n    }\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    newContact(contactName, contactNumber);\n    setContactName('');\n    setContactNumber('');\n  };\n\n  return (\n    <AddContactForm onSubmit={onSubmit} autoComplete=\"off\">\n      <label>\n        <p>Name</p>\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          required\n          value={contactName}\n          onChange={handleChange}\n        />\n      </label>\n      <label>\n        <p>Number</p>\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          required\n          value={contactNumber}\n          onChange={handleChange}\n        />\n      </label>\n      <br />\n      <Button type=\"submit\">Add contact</Button>\n    </AddContactForm>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-direction: column;\n  width: 450px;\n  background-color: tomato;\n  border-radius: 10px;\n  padding: 25px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  margin: 10px;\n  width: 100%;\n  text-align: start;\n`;\nexport const Name = styled.span`\n  font-weight: 600;\n  flex-basis: 100px;\n`;\nexport const Number = styled.span`\n  flex-basis: 100px;\n`;\nexport const DeleteBtn = styled.button`\n  padding: 0px 20px;\n  margin: 0px;\n`;\n","import { Item, List, DeleteBtn, Name, Number } from './ContactList.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from 'redux/filterSlice';\nimport { getContacts } from 'redux/contacts/contactsSelectors';\nimport { useEffect } from 'react';\nimport {\n  fetchContacts,\n  deleteContact,\n} from 'redux/contacts/contactsOperations';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const { contacts } = useSelector(getContacts);\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const filter = useSelector(getFilter);\n\n  const onFilterChange = () => {\n    return contacts.filter(c =>\n      c.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  const removeContact = e => {\n    dispatch(deleteContact(e.currentTarget.id));\n  };\n\n  return (\n    <List>\n      {onFilterChange().map(c => (\n        <Item key={c.id}>\n          <Name>{c.name}</Name>\n          <Number>{c.number}</Number>\n          <DeleteBtn id={c.id} onClick={removeContact}>\n            Delete\n          </DeleteBtn>\n        </Item>\n      ))}\n    </List>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { setFilter, getFilter } from 'redux/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n\n  const onFilterChange = e => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  return (\n    <label>\n      <p>Find contacts by name</p>\n      <input type=\"text\" value={filter} onChange={onFilterChange} />\n    </label>\n  );\n};\n","import { ContactForm } from '../../components/ContactForm/ContactForm';\nimport { ContactList } from '../../components/ContactList/ContactList ';\nimport { Filter } from '../../components/Filter/Filter';\n\nconst Contacts = () => {\n  return (\n    <>\n      <h1 style={{ fontFamily: 'Sriracha' }}>Phonebook</h1>\n      <ContactForm />\n      <h2 style={{ fontFamily: 'Sriracha' }}>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["AddContactForm","styled","Button","getContacts","state","contacts","ContactForm","useState","contactName","setContactName","contactNumber","setContactNumber","dispatch","useDispatch","useSelector","handleChange","e","event","target","type","value","onSubmit","preventDefault","name","number","includeName","find","toLowerCase","includeNumber","alert","addContact","newContact","autoComplete","pattern","required","onChange","List","Item","Name","Number","DeleteBtn","ContactList","useEffect","fetchContacts","filter","getFilter","removeContact","deleteContact","currentTarget","id","c","includes","map","onClick","Filter","setFilter","style","fontFamily"],"sourceRoot":""}